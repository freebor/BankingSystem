version: '3.9'

services:
  api:
    build: .
    container_name: banking_api
    ports:
      - "5000:8080"
    environment:
      # Database connection (uses service name 'db')
      - ConnectionStrings__DefaultConnection=Server=db;Database=BankingDB;User=root;Password=secret;
      
      # Redis connection (uses service name 'redis')
      - ConnectionStrings__Redis=redis:6379,abortConnect=false,password=MyRedisPass123!
      
      # JWT and Paystack configuration
      - Jwt__SecretKey=SuperSecretKeyForJwt_ReplaceThisWithStrongKey123!
      - Paystack__SecretKey=sk_test_xxx
    depends_on:
      - db
      - redis
    networks:
      - banking_network
    restart: unless-stopped

  db:
    image: mysql:8
    container_name: banking_db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: BankingDB
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - banking_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: banking_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass MyRedisPass123!
    networks:
      - banking_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379:0:MyRedisPass123!
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - banking_network
    restart: unless-stopped

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  banking_network:
    driver: bridge